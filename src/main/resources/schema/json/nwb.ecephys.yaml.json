{
    "groups": [
        {
            "datasets": [
                {
                    "dims": [
                        [
                            "num_times"
                        ], 
                        [
                            "num_times", 
                            "num_channels"
                        ]
                    ], 
                    "shape": [
                        [
                            null
                        ], 
                        [
                            null, 
                            null
                        ]
                    ], 
                    "name": "data", 
                    "dtype": "number", 
                    "doc": "Recorded voltage data.", 
                    "attributes": [
                        {
                            "default_value": "volt", 
                            "doc": "The base unit of measure used to store data. This should be in the SI unit. COMMENT: This is the SI unit (when appropriate) of the stored data, such as Volts. If the actual data is stored in millivolts, the field 'conversion' below describes how to convert the data to the specified SI unit.", 
                            "required": false, 
                            "name": "unit", 
                            "dtype": "text"
                        }
                    ]
                }
            ], 
            "links": [
                {
                    "doc": "link to ElectrodeGroup group that generated this TimeSeries data", 
                    "name": "electrode_group", 
                    "target_type": "ElectrodeGroup"
                }
            ], 
            "neurodata_type_inc": "TimeSeries", 
            "doc": "Stores acquired voltage data from extracellular recordings. The data field of an ElectricalSeries is an int or float array storing data in Volts. TimeSeries::data array structure: :blue:`[num times] [num channels] (or [num_times] for single electrode).`", 
            "neurodata_type_def": "ElectricalSeries", 
            "attributes": [
                {
                    "doc": "Value is 'Stores acquired voltage data from extracellular recordings'", 
                    "name": "help", 
                    "value": "Stores acquired voltage data from extracellular recordings", 
                    "dtype": "text"
                }
            ]
        }, 
        {
            "doc": "Stores \"snapshots\" of spike events (i.e., threshold crossings) in data. This may also be raw data, as reported by ephys hardware. If so, the TimeSeries::description field should describing how events were detected. All SpikeEventSeries should reside in a module (under EventWaveform interface) even if the spikes were reported and stored by hardware. All events span the same recording channels and store snapshots of equal duration. TimeSeries::data array structure: :blue:`[num events] [num channels] [num samples] (or [num events] [num samples] for single electrode)`.", 
            "attributes": [
                {
                    "doc": "Value is 'Snapshots of spike events from data.'", 
                    "name": "help", 
                    "value": "Snapshots of spike events from data.", 
                    "dtype": "text"
                }
            ], 
            "neurodata_type_def": "SpikeEventSeries", 
            "datasets": [
                {
                    "dims": [
                        [
                            "num_events", 
                            "num_samples"
                        ], 
                        [
                            "num_events", 
                            "num_channels", 
                            "num_samples"
                        ]
                    ], 
                    "shape": [
                        [
                            null, 
                            null
                        ], 
                        [
                            null, 
                            null, 
                            null
                        ]
                    ], 
                    "name": "data", 
                    "dtype": "float32", 
                    "doc": "Spike waveforms.", 
                    "attributes": [
                        {
                            "default_value": "volt", 
                            "doc": "The base unit of measure used to store data. This should be in the SI unit. COMMENT: This is the SI unit (when appropriate) of the stored data, such as Volts. If the actual data is stored in millivolts, the field 'conversion' below describes how to convert the data to the specified SI unit.", 
                            "required": false, 
                            "name": "unit", 
                            "dtype": "text"
                        }
                    ]
                }
            ], 
            "neurodata_type_inc": "ElectricalSeries"
        }, 
        {
            "datasets": [
                {
                    "doc": "Filtering applied to data before generating mean/sd", 
                    "name": "waveform_filtering", 
                    "dtype": "text"
                }, 
                {
                    "dims": [
                        "num_clusters", 
                        "num_samples"
                    ], 
                    "shape": [
                        null, 
                        null
                    ], 
                    "doc": "The mean waveform for each cluster, using the same indices for each wave as cluster numbers in the associated Clustering module (i.e, cluster 3 is in array slot [3]). Waveforms corresponding to gaps in cluster sequence should be empty (e.g., zero- filled)", 
                    "name": "waveform_mean", 
                    "dtype": "float32"
                }, 
                {
                    "dims": [
                        "num_clusters", 
                        "num_samples"
                    ], 
                    "shape": [
                        null, 
                        null
                    ], 
                    "doc": "Stdev of waveforms for each cluster, using the same indices as in mean", 
                    "name": "waveform_sd", 
                    "dtype": "float32"
                }
            ], 
            "links": [
                {
                    "doc": "HDF5 link to Clustering interface that was the source of the clustered data", 
                    "name": "clustering_interface", 
                    "target_type": "Clustering"
                }
            ], 
            "neurodata_type_inc": "NWBContainer", 
            "doc": "The mean waveform shape, including standard deviation, of the different clusters. Ideally, the waveform analysis should be performed on data that is only high-pass filtered. This is a separate module because it is expected to require updating. For example, IMEC probes may require different storage requirements to store/display mean waveforms, requiring a new interface or an extension of this one.", 
            "neurodata_type_def": "ClusterWaveforms", 
            "default_name": "ClusterWaveforms", 
            "attributes": [
                {
                    "doc": "Value is 'Mean waveform shape of clusters. Waveforms should be high-pass filtered (ie, not the same bandpass filter used waveform analysis and clustering)'", 
                    "name": "help", 
                    "value": "Mean waveform shape of clusters. Waveforms should be high-pass filtered (ie, not the same bandpass filter used waveform analysis and clustering)", 
                    "dtype": "text"
                }
            ]
        }, 
        {
            "datasets": [
                {
                    "doc": "Description of clusters or clustering, (e.g. cluster 0 is noise, clusters curated using Klusters, etc)", 
                    "name": "description", 
                    "dtype": "text"
                }, 
                {
                    "dims": [
                        "num_events"
                    ], 
                    "shape": [
                        null
                    ], 
                    "doc": "Cluster number of each event", 
                    "name": "num", 
                    "dtype": "int32"
                }, 
                {
                    "dims": [
                        "num_clusters"
                    ], 
                    "shape": [
                        null
                    ], 
                    "doc": "Maximum ratio of waveform peak to RMS on any channel in the cluster (provides a basic clustering metric).", 
                    "name": "peak_over_rms", 
                    "dtype": "float32"
                }, 
                {
                    "dims": [
                        "num_events"
                    ], 
                    "shape": [
                        null
                    ], 
                    "doc": "Times of clustered events, in seconds. This may be a link to times field in associated FeatureExtraction module.", 
                    "name": "times", 
                    "dtype": "float64!"
                }
            ], 
            "neurodata_type_inc": "NWBContainer", 
            "doc": "Clustered spike data, whether from automatic clustering tools (e.g., klustakwik) or as a result of manual sorting.", 
            "neurodata_type_def": "Clustering", 
            "default_name": "Clustering", 
            "attributes": [
                {
                    "doc": "Value is 'Clustered spike data, whether from automatic clustering tools (eg, klustakwik) or as a result of manual sorting'", 
                    "name": "help", 
                    "value": "Clustered spike data, whether from automatic clustering tools (eg, klustakwik) or as a result of manual sorting", 
                    "dtype": "text"
                }
            ]
        }, 
        {
            "datasets": [
                {
                    "dims": [
                        "num_features"
                    ], 
                    "shape": [
                        null
                    ], 
                    "doc": "Description of features (eg, \"PC1\") for each of the extracted features.", 
                    "name": "description", 
                    "dtype": "text"
                }, 
                {
                    "dims": [
                        "num_events", 
                        "num_channels", 
                        "num_features"
                    ], 
                    "shape": [
                        null, 
                        null, 
                        null
                    ], 
                    "doc": "Multi-dimensional array of features extracted from each event.", 
                    "name": "features", 
                    "dtype": "float32"
                }, 
                {
                    "dims": [
                        "num_events"
                    ], 
                    "shape": [
                        null
                    ], 
                    "doc": "Times of events that features correspond to (can be a link).", 
                    "name": "times", 
                    "dtype": "float64!"
                }
            ], 
            "links": [
                {
                    "doc": "link to ElectrodeGroup group that generated this TimeSeries data", 
                    "name": "electrode_group", 
                    "target_type": "ElectrodeGroup"
                }
            ], 
            "neurodata_type_inc": "NWBContainer", 
            "doc": "Features, such as PC1 and PC2, that are extracted from signals stored in a SpikeEvent TimeSeries or other source.", 
            "neurodata_type_def": "FeatureExtraction", 
            "default_name": "FeatureExtraction", 
            "attributes": [
                {
                    "doc": "Value is 'Container for salient features of detected events'", 
                    "name": "help", 
                    "value": "Container for salient features of detected events", 
                    "dtype": "text"
                }
            ]
        }, 
        {
            "datasets": [
                {
                    "doc": "Description of how events were detected, such as voltage threshold, or dV/dT threshold, as well as relevant values.", 
                    "name": "detection_method", 
                    "dtype": "text"
                }, 
                {
                    "dims": [
                        "num_events"
                    ], 
                    "shape": [
                        null
                    ], 
                    "doc": "Indices (zero-based) into source ElectricalSeries::data array corresponding to time of event. Module description should define what is meant by time of event (e.g., .25msec before action potential peak, zero-crossing time, etc). The index points to each event from the raw data", 
                    "name": "source_idx", 
                    "dtype": "int32"
                }, 
                {
                    "dims": [
                        "num_events"
                    ], 
                    "shape": [
                        null
                    ], 
                    "name": "times", 
                    "dtype": "float64!", 
                    "doc": "Timestamps of events, in Seconds", 
                    "attributes": [
                        {
                            "default_value": "Seconds", 
                            "doc": "The string \"Seconds\"", 
                            "required": false, 
                            "name": "unit", 
                            "dtype": "text"
                        }
                    ]
                }
            ], 
            "links": [
                {
                    "doc": "HDF5 link to ElectricalSeries that this data was calculated from. Metadata about electrodes and their position can be read from that ElectricalSeries so it's not necessary to mandate that information be stored here", 
                    "name": "source_electricalseries", 
                    "target_type": "ElectricalSeries"
                }
            ], 
            "neurodata_type_inc": "NWBContainer", 
            "doc": "Detected spike events from voltage trace(s).", 
            "neurodata_type_def": "EventDetection", 
            "default_name": "EventDetection", 
            "attributes": [
                {
                    "doc": "Value is 'Detected spike events from voltage trace(s)'", 
                    "name": "help", 
                    "value": "Detected spike events from voltage trace(s)", 
                    "dtype": "text"
                }
            ]
        }, 
        {
            "neurodata_type_inc": "NWBContainer", 
            "groups": [
                {
                    "doc": "SpikeEventSeries object containing detected spike event waveforms", 
                    "neurodata_type_inc": "SpikeEventSeries", 
                    "quantity": "*"
                }
            ], 
            "attributes": [
                {
                    "doc": "Value is 'Waveform of detected extracellularly recorded spike events'", 
                    "name": "help", 
                    "value": "Waveform of detected extracellularly recorded spike events", 
                    "dtype": "text"
                }
            ], 
            "doc": "Represents either the waveforms of detected events, as extracted from a raw data trace in /acquisition, or the event waveforms that were stored during experiment acquisition.", 
            "neurodata_type_def": "EventWaveform", 
            "default_name": "EventWaveform"
        }, 
        {
            "neurodata_type_inc": "NWBContainer", 
            "groups": [
                {
                    "doc": "ElectricalSeries object containing filtered electrophysiology data", 
                    "neurodata_type_inc": "ElectricalSeries", 
                    "quantity": "+"
                }
            ], 
            "attributes": [
                {
                    "doc": "Value is 'Ephys data from one or more channels that is subjected to filtering, such as for gamma or theta oscillations (LFP has its own interface). Filter properties should be noted in the ElectricalSeries'", 
                    "name": "help", 
                    "value": "Ephys data from one or more channels that is subjected to filtering, such as for gamma or theta oscillations (LFP has its own interface). Filter properties should be noted in the ElectricalSeries", 
                    "dtype": "text"
                }
            ], 
            "doc": "Ephys data from one or more channels that has been subjected to filtering. Examples of filtered data include Theta and Gamma (LFP has its own interface). FilteredEphys modules publish an ElectricalSeries for each filtered channel or set of channels. The name of each ElectricalSeries is arbitrary but should be informative. The source of the filtered data, whether this is from analysis of another time series or as acquired by hardware, should be noted in each's TimeSeries::description field. There is no assumed 1::1 correspondence between filtered ephys signals and electrodes, as a single signal can apply to many nearby electrodes, and one electrode may have different filtered (e.g., theta and/or gamma) signals represented.", 
            "neurodata_type_def": "FilteredEphys", 
            "default_name": "FilteredEphys"
        }, 
        {
            "neurodata_type_inc": "NWBContainer", 
            "groups": [
                {
                    "doc": "ElectricalSeries object containing LFP data for one or channels", 
                    "neurodata_type_inc": "ElectricalSeries", 
                    "quantity": "+"
                }
            ], 
            "attributes": [
                {
                    "doc": "Value is 'LFP data from one or more channels. Filter properties should be noted in the ElectricalSeries'", 
                    "name": "help", 
                    "value": "LFP data from one or more channels. Filter properties should be noted in the ElectricalSeries", 
                    "dtype": "text"
                }
            ], 
            "doc": "LFP data from one or more channels. The electrode map in each published ElectricalSeries will identify which channels are providing LFP data. Filter properties should be noted in the ElectricalSeries description or comments field.", 
            "neurodata_type_def": "LFP", 
            "default_name": "LFP"
        }, 
        {
            "datasets": [
                {
                    "dims": [
                        "num_channels"
                    ], 
                    "shape": [
                        null
                    ], 
                    "doc": "array with description for each channel", 
                    "name": "channel_description", 
                    "dtype": "text"
                }, 
                {
                    "dims": [
                        "num_channels"
                    ], 
                    "shape": [
                        null
                    ], 
                    "doc": "array with location description for each channel e.g. \"CA1\"", 
                    "name": "channel_location", 
                    "dtype": "text"
                }, 
                {
                    "dims": [
                        "num_channels"
                    ], 
                    "shape": [
                        null
                    ], 
                    "doc": "array with description of filtering applied to each channel", 
                    "name": "channel_filtering", 
                    "dtype": "text"
                }, 
                {
                    "dims": [
                        "num_channels", 
                        "dimensions"
                    ], 
                    "shape": [
                        null, 
                        3
                    ], 
                    "doc": "xyz-coordinates for each channel. use NaN for unknown dimensions", 
                    "name": "channel_coordinates", 
                    "dtype": "text"
                }, 
                {
                    "dims": [
                        "num_channels"
                    ], 
                    "shape": [
                        null
                    ], 
                    "doc": "float array with impedance used on each channel. Can be 2D matrix to store a range", 
                    "name": "channel_impedance", 
                    "dtype": "text"
                }, 
                {
                    "doc": "description of this electrode group", 
                    "name": "description", 
                    "dtype": "text"
                }, 
                {
                    "doc": "description of location of this electrode group", 
                    "name": "location", 
                    "dtype": "text"
                }
            ], 
            "links": [
                {
                    "doc": "the device that was used to record from this electrode group", 
                    "quantity": "?", 
                    "target_type": "Device", 
                    "name": "device"
                }
            ], 
            "neurodata_type_inc": "NWBContainer", 
            "doc": "One of possibly many groups, one for each electrode group.", 
            "neurodata_type_def": "ElectrodeGroup", 
            "attributes": [
                {
                    "doc": "Value is 'A physical grouping of channels'", 
                    "name": "help", 
                    "value": "A physical grouping of channels", 
                    "dtype": "str"
                }
            ]
        }
    ]
}